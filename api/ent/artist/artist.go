// Code generated by ent, DO NOT EDIT.

package artist

const (
	// Label holds the string label denoting the artist type in the database.
	Label = "artist"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// EdgeWrote holds the string denoting the wrote edge name in mutations.
	EdgeWrote = "wrote"
	// Table holds the table name of the artist in the database.
	Table = "artists"
	// WroteTable is the table that holds the wrote relation/edge. The primary key declared below.
	WroteTable = "artist_wrote"
	// WroteInverseTable is the table name for the Album entity.
	// It exists in this package in order to avoid circular dependency with the "album" package.
	WroteInverseTable = "albums"
)

// Columns holds all SQL columns for artist fields.
var Columns = []string{
	FieldID,
	FieldName,
}

var (
	// WrotePrimaryKey and WroteColumn2 are the table columns denoting the
	// primary key for the wrote relation (M2M).
	WrotePrimaryKey = []string{"artist_id", "album_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
