// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"
)

// CreateAlbumInput represents a mutation input for creating albums.
type CreateAlbumInput struct {
	Name      string
	CreatedAt *time.Time
	ByIDs     []int
}

// Mutate applies the CreateAlbumInput on the AlbumMutation builder.
func (i *CreateAlbumInput) Mutate(m *AlbumMutation) {
	m.SetName(i.Name)
	if v := i.CreatedAt; v != nil {
		m.SetCreatedAt(*v)
	}
	if v := i.ByIDs; len(v) > 0 {
		m.AddByIDs(v...)
	}
}

// SetInput applies the change-set in the CreateAlbumInput on the AlbumCreate builder.
func (c *AlbumCreate) SetInput(i CreateAlbumInput) *AlbumCreate {
	i.Mutate(c.Mutation())
	return c
}

// CreateArtistInput represents a mutation input for creating artists.
type CreateArtistInput struct {
	Name     string
	WroteIDs []int
}

// Mutate applies the CreateArtistInput on the ArtistMutation builder.
func (i *CreateArtistInput) Mutate(m *ArtistMutation) {
	m.SetName(i.Name)
	if v := i.WroteIDs; len(v) > 0 {
		m.AddWroteIDs(v...)
	}
}

// SetInput applies the change-set in the CreateArtistInput on the ArtistCreate builder.
func (c *ArtistCreate) SetInput(i CreateArtistInput) *ArtistCreate {
	i.Mutate(c.Mutation())
	return c
}
